
import java.util.ArrayList;//To import the java Array List
import javax.swing.ImageIcon; // To import the image icons
import javax.swing.JOptionPane; //To import the Pane
import java.io.*;//To import the Input and Output
import java.util.Random;//To import the random


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Binu Senevirathne
 */
public class Hangman extends javax.swing.JFrame {

    /**
     * Creates new form Hangman
     */
    public Hangman() {
        initComponents();
        coveringX();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Input = new javax.swing.JTextField();
        BtnTryLetter = new javax.swing.JButton();
        CountNum = new javax.swing.JLabel();
        Letter1 = new javax.swing.JLabel();
        Letter2 = new javax.swing.JLabel();
        Letter3 = new javax.swing.JLabel();
        Letter4 = new javax.swing.JLabel();
        Letter5 = new javax.swing.JLabel();
        Letter6 = new javax.swing.JLabel();
        Letter7 = new javax.swing.JLabel();
        Letter8 = new javax.swing.JLabel();
        Letter9 = new javax.swing.JLabel();
        Letter10 = new javax.swing.JLabel();
        ImagePanel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 210, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BtnTryLetter.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        BtnTryLetter.setText("Try Letter");
        BtnTryLetter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnTryLetterActionPerformed(evt);
            }
        });

        CountNum.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        Letter1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        Letter1.setText("X");

        Letter2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        Letter2.setText("X");

        Letter3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        Letter3.setText("X");

        Letter4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        Letter4.setText("X");

        Letter5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        Letter5.setText("X");

        Letter6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        Letter6.setText("X");

        Letter7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        Letter7.setText("X");

        Letter8.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        Letter8.setText("X");

        Letter9.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        Letter9.setText("X");

        Letter10.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        Letter10.setText("X");

        ImagePanel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image.png"))); // NOI18N
        ImagePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel2.setText("Wrong Attempts");

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel3.setText("Number Of Letters");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(35, 35, 35)
                        .addComponent(CountNum))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(Letter1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BtnTryLetter, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Letter2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Letter3, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Letter4, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Letter5, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Letter6, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Letter7, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Letter8, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Letter9, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Letter10, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Input, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addComponent(ImagePanel)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Letter1)
                    .addComponent(Letter2)
                    .addComponent(Letter3)
                    .addComponent(Letter4)
                    .addComponent(Letter5)
                    .addComponent(Letter6)
                    .addComponent(Letter7)
                    .addComponent(Letter8)
                    .addComponent(Letter9)
                    .addComponent(Letter10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Input, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CountNum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(97, 97, 97)))
                .addComponent(BtnTryLetter)
                .addGap(77, 77, 77))
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(ImagePanel)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnTryLetterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnTryLetterActionPerformed

        //Initialising a array to store the word length and for loop to check the length of each word 
        char[] characters = new char[words.length()];

        for (int i = 0; i < characters.length; i++) {//Using a for loops to store the values
            characters[i] = words.charAt(i);
        }
        try {//using a try to catch the errors

            //Declaring a Char as guessWord and storing the input of (0)th element using (.charAt(0)) from textField
            char guessWord = Input.getText().charAt(0);

            //converting the entered characters into lower case
            guessWord = Character.toLowerCase(guessWord);

            ArrayList<Character> crr = new ArrayList<Character>();
            crr.add(guessWord);

            //exceptioning special characters
            if (!(Character.isLetter(guessWord))) {
                guessWord = '\0';
                Input.setText(null);
                Input.requestFocus();
                JOptionPane.showMessageDialog(null, "Error: You must enter an valid letter");
            }else {    
                //Initializing the ArrayList arr and calling the search method assigning characters and guessWord results
                ArrayList<Integer> arr = search(characters, guessWord);

                //checking whether size of the list array arr == 1
                if (arr.size() == 1) {
                    for (int value : arr) { //using an for enchanced loop to substituting values properly
                        convertingX(value, guessWord);// calling the convertingX method and assigning the array and guessWord results
                    }

                    //checking whether size of arr > 1 to use the method assigningLetter 
                } else if (arr.size() > 1) {
                    assigningLetter(arr, guessWord);//calling the method assigningLetter and assigning the array and guessWord results
                }

                //checking whether array list size == 0 
                if (arr.size() == 0) {
                    numberOfLosses += 1;

                    CountNum.setText(Integer.toString(numberOfLosses));//assigning the number of loding chances into lable CountNum

                    addImages(numberOfLosses);//Sliding to the next image

                    //Checking the maximum number of losses
                    if (numberOfLosses == 6) {
                        //Showing a message in a message box to show that user have lost the game
                        JOptionPane.showMessageDialog(rootPane, "You have lost, the word is " + "\"" + words + "\"" + " Better luck next time. ", "Game over", WIDTH);
                    }

                } else {

                    numberOfWins += arr.size();

                    if (numberOfWins == words.length()) {//Cheecking the number of correct attempts
                        //Showing a message in a message box to show user have won the game
                        JOptionPane.showMessageDialog(rootPane, "Congratulations you have won the game, Keep it up!", "Game over", WIDTH);
                    }
                }

                Input.setText(null);//empting the textField
                Input.requestFocus();//Setting the cursor focus in textField
            }

        } catch (IndexOutOfBoundsException ex) {//Giving the Exception Index Out of Bounds and assigning a variable ex

            JOptionPane.showMessageDialog(null, "Error: You must enter an valid character");//Displaying the error message
        }

    }//GEN-LAST:event_BtnTryLetterActionPerformed

    public ArrayList<Integer> search(char[] array, char value) {//Method used to linear search

        ArrayList<Integer> set = new ArrayList<Integer>();//creating an array list for the set of array and char values obtained

        for (int i = 0; i < array.length; i++) {//for loop to navigate through the word
            if (array[i] == value) {
                set.add(i);
            }
        }
        return set;//returning the value 
    }

    public void convertingX(int value, char string) {//Method used to changing the X to approriate letter 

        switch (value) {

            case 0:
                Letter1.setText(Character.toString(string));
                break;

            case 1:
                Letter2.setText(Character.toString(string));
                break;

            case 2:
                Letter3.setText(Character.toString(string));
                break;

            case 3:
                Letter4.setText(Character.toString(string));
                break;

            case 4:
                Letter5.setText(Character.toString(string));
                break;

            case 5:
                Letter6.setText(Character.toString(string));
                break;

            case 6:
                Letter7.setText(Character.toString(string));
                break;

            case 7:
                Letter8.setText(Character.toString(string));
                break;

            case 8:
                Letter9.setText(Character.toString(string));
                break;

            case 9:
                Letter10.setText(Character.toString(string));
                break;

        }
    }

    public void assigningLetter(ArrayList<Integer> brr, char character) {//Method used to Assign the letter
        int index = 0;
        for (int value : brr) {//for enhanced loop to navigate each and every letter
            index = value;
            convertingX(index, character);//calling the ConvertingX method to execute
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hangman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hangman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hangman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hangman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Hangman().setVisible(true);
            }

        });
    }

    private String words = wordsList();//Declaring the Words variable which stores the word list
    private int numberOfWins = 0, numberOfLosses = 0; //Declaring the variables of correct and wrong attempts and inizializing them to 0

    public void coveringX() { //Method used to Hide lables until the approriate match has been input

        int numberOfX = words.length();

        switch (numberOfX) {
            //Cases are according to the word length which is selected by the random
            case 1:
                Letter10.setVisible(false);//setting it to not visible
                Letter9.setVisible(false);
                Letter8.setVisible(false);
                Letter7.setVisible(false);
                Letter6.setVisible(false);
                Letter5.setVisible(false);
                Letter4.setVisible(false);
                Letter3.setVisible(false);
                Letter2.setVisible(false);
                break;

            case 2:
                Letter10.setVisible(false);
                Letter9.setVisible(false);
                Letter8.setVisible(false);
                Letter7.setVisible(false);
                Letter6.setVisible(false);
                Letter5.setVisible(false);
                Letter4.setVisible(false);
                Letter3.setVisible(false);
                break;

            case 3:
                Letter10.setVisible(false);
                Letter9.setVisible(false);
                Letter8.setVisible(false);
                Letter7.setVisible(false);
                Letter6.setVisible(false);
                Letter5.setVisible(false);
                Letter4.setVisible(false);
                break;

            case 4:
                Letter10.setVisible(false);
                Letter9.setVisible(false);
                Letter8.setVisible(false);
                Letter7.setVisible(false);
                Letter6.setVisible(false);
                Letter5.setVisible(false);
                break;

            case 5:
                Letter10.setVisible(false);
                Letter9.setVisible(false);
                Letter8.setVisible(false);
                Letter7.setVisible(false);
                Letter6.setVisible(false);
                break;

            case 6:
                Letter10.setVisible(false);
                Letter9.setVisible(false);
                Letter8.setVisible(false);
                Letter7.setVisible(false);
                break;

            case 7:
                Letter10.setVisible(false);
                Letter9.setVisible(false);
                Letter8.setVisible(false);
                break;

            case 8:
                Letter10.setVisible(false);
                Letter9.setVisible(false);
                break;

            case 9:
                Letter10.setVisible(false);
                break;

        }
    }

    public void addImages(int value) { //Add images to the lable inorder to display
        //Importing the Images    

        ImageIcon Image1 = new ImageIcon(getClass().getResource("/Image1.png"));
        ImageIcon Image2 = new ImageIcon(getClass().getResource("/Image2.png"));
        ImageIcon Image3 = new ImageIcon(getClass().getResource("/Image3.png"));
        ImageIcon Image4 = new ImageIcon(getClass().getResource("/Image4.png"));
        ImageIcon Image5 = new ImageIcon(getClass().getResource("/Image5.png"));
        ImageIcon Image6 = new ImageIcon(getClass().getResource("/Image6.png"));

        //Setting up the order of the images using a switch case
        switch (value) {
            case 1:
                ImagePanel.setIcon(Image1);
                break;
            case 2:
                ImagePanel.setIcon(Image2);
                break;
            case 3:
                ImagePanel.setIcon(Image3);
                break;
            case 4:
                ImagePanel.setIcon(Image4);
                break;
            case 5:
                ImagePanel.setIcon(Image5);
                break;
            case 6:
                ImagePanel.setIcon(Image6);
                break;

        }
    }

    public String wordsList() { //To choose a new word

        String randomWord = " ";//Declaring this variable in order to return the value 

        try {//Using try to catch the Exceptions

            BufferedReader reader = new BufferedReader(new FileReader("WordList.txt"));//Creating a Buffered Reader Object to view the file
            String lines = reader.readLine();//readLine function is used to read each line of document

            ArrayList<String> wordslist = new ArrayList<String>();//declaring a Array list to store the values

            while (lines != null) {//Using the while loop to make sure that file isn't empty
                String[] wordsLine = lines.split(" "); //This will return a String 
                for (String word : wordsLine) {//usimg this for enchanced loop words are added to the words Array list
                    wordslist.add(word);
                }
                lines = reader.readLine();
            }

            Random num = new Random(System.currentTimeMillis());//num is created to randomise the words in the documents
            randomWord = wordslist.get(num.nextInt(wordslist.size()));//This is used to pick one random word

            return randomWord;// this will return the picked word

        } catch (Exception ex) {//Used to catch the Exceptions if the data of the File or File is missing

            JOptionPane.showMessageDialog(null, "Error: File is not Existed!");//Show the Error Message 
        }

        return "Error";//Returning the Error
    }

    /*String[] guessingWords = {"apple", "isolated", "unfaithful", "ghost", "mystery", "meaningful"};//Storing the words
        int i = 1 + (int) (Math.random() * 5);//choose an random word from above words
        return guessingWords[i]; //returning the word array */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnTryLetter;
    private javax.swing.JLabel CountNum;
    private javax.swing.JLabel ImagePanel;
    private javax.swing.JTextField Input;
    private javax.swing.JLabel Letter1;
    private javax.swing.JLabel Letter10;
    private javax.swing.JLabel Letter2;
    private javax.swing.JLabel Letter3;
    private javax.swing.JLabel Letter4;
    private javax.swing.JLabel Letter5;
    private javax.swing.JLabel Letter6;
    private javax.swing.JLabel Letter7;
    private javax.swing.JLabel Letter8;
    private javax.swing.JLabel Letter9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

}
